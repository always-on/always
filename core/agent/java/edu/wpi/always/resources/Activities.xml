<?xml version="1.0" encoding="UTF-8"?>
<taskModel xmlns="http://www.cs.wpi.edu/~rich/cetask/cea-2018-ext"
           xmlns:disco="urn:disco.wpi.edu:Disco"
           about="urn:always.wpi.edu:Activities">
   <task id="_CalendarImminent">
      <precondition>isImminent()</precondition>
      <subtasks id="__CalendarImminent_subtasks">
         <step name="__CalendarImminent_step" task="disco:Say"/>
         <step name="__CalendarImminent_ref" task="__CalendarImminent_tree"/>
         <binding slot="$__CalendarImminent_step.text"
                  value="&#34;There are upcoming events in your calendar today or tomorrow.  Would you like to see the calendar now?&#34;"/>
         <binding slot="$__CalendarImminent_step.external" value="false"/>
      </subtasks>
   </task>
   <task id="_EncourageExplain">
      <precondition>!Packages.edu.wpi.always.explain.ExplainPlugin.isPerformed() &amp;&amp;               Packages.edu.wpi.always.user.UserUtils.getDays(userModel()) &gt; 2</precondition>
      <subtasks id="__EncourageExplain_subtasks">
         <step name="__EncourageExplain_step" task="disco:Say"/>
         <step name="__EncourageExplain_ref" task="__EncourageExplain_tree"/>
         <binding slot="$__EncourageExplain_step.text"
                  value="&#34;You have not ever listened to me explain about all the activities we can do together&#34;"/>
         <binding slot="$__EncourageExplain_step.external" value="false"/>
      </subtasks>
   </task>
   <task id="__CalendarImminent_tree">
      <subtasks id="_d4e45_subtasks">
         <step name="_d4e45_step" task="disco:Say"/>
         <step name="_d4e46_step" task="UseCalendar"/>
         <binding slot="$_d4e45_step.text" value="&#34;Yes, please&#34;"/>
         <binding slot="$_d4e45_step.external" value="true"/>
      </subtasks>
      <subtasks id="_d4e47_subtasks">
         <step name="_d4e47_step" task="disco:Say"/>
         <binding slot="$_d4e47_step.text" value="&#34;Not now&#34;"/>
         <binding slot="$_d4e47_step.external" value="true"/>
      </subtasks>
   </task>
   <task id="__EncourageExplain_tree">
      <subtasks id="_d4e49_subtasks">
         <step name="_d4e49_step" task="disco:Say"/>
         <binding slot="$_d4e49_step.text" value="&#34;Oh, really?  Okay, I'll try that&#34;"/>
         <binding slot="$_d4e49_step.external" value="true"/>
      </subtasks>
      <subtasks id="_d4e50_subtasks">
         <step name="_d4e50_step" task="disco:Say"/>
         <binding slot="$_d4e50_step.text" value="&#34;I don't want to hear about this now&#34;"/>
         <binding slot="$_d4e50_step.external" value="true"/>
      </subtasks>
      <subtasks id="_d4e51_subtasks">
         <step name="_d4e51_step" task="disco:Say"/>
         <step name="_d4e52_step" task="disco:Say"/>
         <binding slot="$_d4e51_step.text" value="&#34;I guess I will listen&#34;"/>
         <binding slot="$_d4e51_step.external" value="true"/>
         <binding slot="$_d4e52_step.text"
                  value="&#34;&lt;FACE EXPR=\&#34;SMILE\&#34;/&gt; You can always stop when you've heard enough and listen again later lt;FACE EXPR=\&#34;WARM\&#34;/&gt; &#34;"/>
         <binding slot="$_d4e52_step.external" value="false"/>
      </subtasks>
      <subtasks id="_d4e53_subtasks">
         <step name="_d4e53_step" task="disco:Say"/>
         <binding slot="$_d4e53_step.text" value="&#34;Maybe tomorrow&#34;"/>
         <binding slot="$_d4e53_step.external" value="true"/>
      </subtasks>
   </task>
   <task id="GreetUser"/>
   <task id="ExplainSelf"/>
   <task id="DiscussWeather">
      <precondition> 
        Packages.edu.wpi.always.user.UserUtils.getTimeOfDay() == Packages.edu.wpi.always.user.UserUtils.TimeOfDay.NIGHT ? false : null 
     </precondition>
   </task>
   <task id="PlayTicTacToe"/>
   <task id="PlayRummy"/>
   <task id="PlayCheckers">
      <precondition> isExplained("PLAY_GAMES") || notStranger() || days() &gt; 1 </precondition>
   </task>
   <task id="HearAnecdotes">
      <precondition> isExplained("HEAR_ANECDOTES") || notStranger() </precondition>
   </task>
   <task id="EnrollUser">
      <precondition> 
       Packages.edu.wpi.always.Always.THIS.getUserModel().getSessions() == 0
       || notStranger() || days() &gt; 2
    </precondition>
   </task>
   <task id="TalkAbout">
      <precondition> 
      Packages.edu.wpi.always.enroll.EnrollPlugin.isPerformed() &amp;&amp;
        (isExplained("TALK_ABOUT") || notStranger() || days() &gt; 2)
    </precondition>
   </task>
   <task id="GetHealthTips">
      <precondition> notStranger() </precondition>
   </task>
   <task id="AdviseNutrition">
      <precondition> isExplained("ADVISE_NUTRITION") || notStranger() </precondition>
   </task>
   <task id="UseCalendar">
      <precondition>
      isImminent() || isExplained("USE_CALENDAR") || notStranger() || days() &gt; 3 
    </precondition>
   </task>
   <task id="PlanExercise">
      <precondition> advanced(7, "PLAN_EXERCISE") </precondition>
   </task>
   <task id="TellStory">
      <precondition> advanced(8, "TELL_STORY") </precondition>
   </task>
   <task id="UseSkype">
      <precondition> advanced(9, "USE_SKYPE") </precondition>
   </task>
   <task id="SayGoodbye"/>
   <script init="true">

    /*
     This element contains Javascript that is evaluated when this model
     is loaded.  This is convenient place to set parameters, etc., without
     changing source code.  Note that all Java classes and methods can
     be accessed from Javascript.  The variable edu.wpi.always.Always.THIS
     contains the most recent instance of the system.

     Note the 'eval' command in the Disco console window can be used
     similarly.
    */
  
    // note $always not initialized yet
    
    function userModel () { 
      return Packages.edu.wpi.always.Always.THIS.getUserModel();
    }

    function isImminent () {
      return Packages.edu.wpi.always.user.calendar.CalendarUtils.isImminent(userModel().getCalendar());
    }

    function notStranger () { 
      return userModel().getCloseness() != Packages.edu.wpi.always.Closeness.STRANGER;
    }

    function advanced (min, property) {
      return userModel().getCloseness() == Packages.edu.wpi.always.Closeness.COMPANION
        || ( notStranger() &amp;&amp; (isExplained(property) || (days() &gt; min &amp;&amp; sessions() &gt; days()/2) ));
    }

    function days () { 
      return Packages.edu.wpi.always.user.UserUtils.getDays(userModel());
    }

    function sessions () { return userModel().getSessions(); }

    function isExplained (property) {
      return userModel().isProperty(Packages.edu.wpi.always.explain.ExplainPlugin[property]);
    }

    /* These variables can be changed either here or using eval command in console.  Note
       the values here only apply to the session instance of Disco.  Tracing in Disco-based
       plugins can be set in the plugin model or plugin console. */
    
    Packages.edu.wpi.always.Always.TRACE = true;
    Packages.edu.wpi.disco.rt.DiscoRT.TRACE = false;
    
    /* Rules for progressing through closeness levels.  These are here rather than in
       RelationshipManager.java in order to avoid compile dependency on plugin projects
    */

    model = userModel();
    if ( model.getCloseness() != Packages.edu.wpi.always.Closeness.COMPANION ) {
       if ( Packages.edu.wpi.always.about.AboutPlugin.isPerformed() ||
            Packages.plugins.ExercisePlugin.isPerformed() ||
            Packages.plugins.StorytellingPlugin.isPerformed() ||
            Packages.edu.neu.always.skype.SkypePlugin.isPerformed() ||
            ( Packages.edu.wpi.always.enroll.EnrollPlugin.isPerformed() &amp;&amp;	
              Packages.edu.wpi.always.calendar.CalendarPlugin.isPerformed() ) )
           model.setCloseness(Packages.edu.wpi.always.Closeness.COMPANION)
        else if ( model.getCloseness() != Packages.edu.wpi.always.Closeness.ACQUAINTANCE ) {
           if ( Packages.edu.wpi.always.enroll.EnrollPlugin.isPerformed() ||
                Packages.edu.wpi.always.calendar.CalendarPlugin.isPerformed() ||
                ( days() &gt; 6 &amp;&amp; sessions() &gt; days()/2 &amp;&amp;
                  ( Packages.edu.wpi.always.about.CheckersPlugin.isPerformed() ||
                    Packages.plugins.ExplainPlugin.isPerformed() ||
                    Packages.edu.wpi.always.enroll.EnrollPlugin.isPerformed() ||	
                    Packages.edu.wpi.always.calendar.CalendarPlugin.isPerformed() ||
                    Packages.plugins.AnecdotesPlugin.isPerformed() ||
                    Packages.plugins.HealthPlugin.isPerformed() ||
                    Packages.plugins.NutritionPlugin.isPerformed() ||	
                    Packages.edu.wpi.always.srummy.SrummyPlugin.isPerformed() ||
                    Packages.edu.wpi.always.ttt.TTTPlugin.isPerformed() ) ) )
               model.setCloseness(Packages.edu.wpi.always.Closeness.ACQUAINTANCE);
         }
    }
    
  </script>
</taskModel>