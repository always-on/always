var Object.serverFaceTracking;
var Object.lastCommand = "";

function Object.wiggleEars()
{
   Global.servo.leftEar = 30,
   Global.servo.rightEar = 30;
   sleep(0.3s);
   Global.servo.leftEar = 80,
   Global.servo.rightEar = 80;
};

function Object.listeningFaceTrackingSocket()
{
   Object.serverFaceTracking.listen("0.0.0.0","12045");
   echo("[Face Tracking] Listening on port #: 12045");
};

function Object.socketConnectionFaceTracking()
{
   Object.serverFaceTracking = do(Server.new)
   {
      function serverConnections()
      {
         for (var i in this.sockets)
         {
            echo("socket in list: %s -> %s" % [i, i.isConnected]);
         };
      };

      at (connection?(var socketFaceTracking))
      {
         at (socketFaceTracking.connected?)
         {
            echo("socket connected = " + socketFaceTracking);
            this.serverConnections();
         };

         at (socketFaceTracking.disconnected?)
         {
            echo("socket disconnected, waiting for connection again.");
            this.serverConnections();
         };

         at (socketFaceTracking.received?(var command))
         {
            if(Object.lastCommand.asString != command.asString)
            {
               detach({server.launch(command);});
               echo ("Received command = " + command);
               Object.lastCommand = command;
            }
            else
               echo("Last command is equal to the current!");
         };
      };
   };
};

Object.socketConnectionFaceTracking();
Object.listeningFaceTrackingSocket();
